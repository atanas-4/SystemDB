@page "/purchase"

@attribute [Authorize]

@inject IPurchaseInventoryUseCase PurchaseInventoryUseCase
@using SystemDB.WebApp.ViewModels
<h3>Закупуване на инвентар</h3>
<br />

@if (purchaseViewModel != null)
{
    <EditForm Model="purchaseViewModel" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="po">Поръчка за закупуване</label>
            <InputText id="po" @bind-Value="purchaseViewModel.PurchaseOrder" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="inv">Инвентар за закупуване</label>
            <ViewInventoriesComponent OnSelectInventory="OnSelectInventory"
                                  DisplaySearchResult="true"></ViewInventoriesComponent>
            <InputText id="inv" class="form-control" @bind-Value="purchaseViewModel.InventoryName" disabled></InputText>
            <input type="hidden" value="@purchaseViewModel.InventoryId" />
            @if (selectedInventory != null)
            {
                <text>Цена:</text>
                @selectedInventory?.Price.ToString("c")
            }

        </div>

        <div class="form-group">
            <label for="qty">Количество</label>
            <InputNumber id="qty" @bind-Value="purchaseViewModel.QuantityToPurchase" class="form-control"></InputNumber>
        </div>
        <br />
        <button type="submit" class="btn btn-primary">Закупи</button>

    </EditForm>
}





@code {
    private PurchaseViewModel purchaseViewModel = new PurchaseViewModel();
    private Inventory selectedInventory;

    private void OnSelectInventory(Inventory inventory)
    {
        this.selectedInventory = inventory;
        purchaseViewModel.InventoryId = inventory.InventoryId;
        purchaseViewModel.InventoryName = inventory.InventoryName;
    }

    private async Task OnValidSubmit()
    {
        //ОК, работи добре, сега можем да продължим да изпълняваме PurchaseInventoryUseCase
        await PurchaseInventoryUseCase.ExecuteAsync(
            this.purchaseViewModel.PurchaseOrder,
            this.selectedInventory,
            this.purchaseViewModel.QuantityToPurchase,
            "Frank" // можем да го хардкоднем за сега, после ще го заменим, когато имплементираме входа в системата
        );

        //нека да изчистим тук, така че да можем непрекъснато да закупуваме инвентари
        this.purchaseViewModel = new PurchaseViewModel();
        this.selectedInventory = null;

    }

}

